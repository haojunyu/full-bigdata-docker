version: '3.7'

services:
  namenode:
    image: datagrand/hadoop-namenode:3.1.3
    hostname: namenode
    networks:
      - hadoop
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - 9870:9870
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        traefik.docker.network: hbase
        traefik.port: 50070
  
  datanode:
    image: datagrand/hadoop-datanode:3.1.3
    hostname: datanode
    networks:
      - hadoop
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        traefik.docker.network: hbase
        traefik.port: 50075

  resourcemanager:
    image: datagrand/hadoop-resourcemanager:3.1.3
    hostname: resourcemanager
    networks:
      - hadoop
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    ports:
      - 8088:8088
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        traefik.docker.network: hbase
        traefik.port: 8088
    healthcheck:
      disable: true

  nodemanager:
    image: datagrand/hadoop-nodemanager:3.1.3
    hostname: nodemanager
    networks:
      - hadoop
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        traefik.docker.network: hbase
        traefik.port: 8042
  

volumes:
  datanode:
  namenode:
  hadoop_historyserver:

networks:
  hadoop:
    external:
      name: hadoop
